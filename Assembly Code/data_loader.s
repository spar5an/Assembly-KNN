#include <xc.inc>

    
extrn k
global	setup_data, load_data, data_loc, first_points_loc, load_first_points_data
;this is a temporary solution to load some data in to begin coding the KNN
;20 binary data points with 3 parameters each
    
PSECT udata_bank0
first_points_loc:   ds	20;this needs to be 4 times K
    
    

PSECT udata_bank2
data_loc:   ds	256

    
psect udata_acs
data_length:	ds  1
first_point_length: ds	1
counter:    ds	1

    
psect	data_code, class=CODE
first_point_data:
	db	    0x5a, 0x16, 0x25, 0x1, 0x48, 0x1b, 0xc3, 0x1, 0xc6, 0xd4, 0x76, 0x0
	align   2
data:
	db	    0xe8, 0xee, 0x37, 0x0, 0x51, 0x19, 0xbb, 0x1, 0x9a, 0xd1, 0x34, 0x0, 0x5d, 0x25, 0x96, 0x1, 0x82, 0xd2, 0x22, 0x0, 0xd1, 0xf6, 0x47, 0x0, 0x4c, 0x3d, 0xc1, 0x1, 0xae, 0xbe, 0x32, 0x0, 0xb6, 0xf0, 0x21, 0x0, 0xfb, 0xe3, 0x5a, 0x0, 0xb7, 0xd5, 0x2e, 0x0, 0x69, 0x41, 0xa4, 0x1, 0x3d, 0x8, 0x79, 0x1, 0xb6, 0xdc, 0x55, 0x0, 0x7a, 0xe2, 0x59, 0x0, 0x20, 0x2b, 0xff, 0x1, 0xa3, 0xdb, 0x41, 0x0, 0x8f, 0xd6, 0x52, 0x0, 0x3b, 0xff, 0x1e, 0x0, 0x21, 0x25, 0x9b, 0x1, 0xa, 0x2a, 0x92, 0x1, 0x91, 0xdd, 0x59, 0x0, 0x45, 0x41, 0x3d, 0x1, 0x89, 0xcf, 0x65, 0x0, 0xb2, 0xe4, 0x45, 0x0, 0x46, 0xdb, 0x2e, 0x0, 0x76, 0x17, 0xae, 0x1, 0x8a, 0xe4, 0x66, 0x0, 0xd1, 0xce, 0x38, 0x0, 0x22, 0x7, 0xa8, 0x1, 0x21, 0x28, 0x7d, 0x1, 0x70, 0xf5, 0x67, 0x0, 0xff, 0xc9, 0x0, 0x0, 0x8, 0x2b, 0x88, 0x1, 0x5e, 0x11, 0xa7, 0x1, 0xad, 0xdb, 0xd, 0x0, 0x9c, 0xf4, 0x82, 0x0, 0x10, 0x20, 0x83, 0x1, 0x96, 0xde, 0x47, 0x0, 0x9f, 0xce, 0x4a, 0x0, 0xa2, 0xd6, 0x48, 0x0, 0x83, 0xe7, 0x45, 0x0, 0xc, 0x1f, 0xb1, 0x1, 0xae, 0xdd, 0x7f, 0x0, 0x16, 0x22, 0x57, 0x1, 0x3f, 0x26, 0x9a, 0x1, 0x4e, 0x1b, 0x6e, 0x1, 0xc4, 0xe5, 0x61, 0x0, 0x52, 0x32, 0x8b, 0x1, 0x34, 0x1a, 0xb6, 0x1, 0x37, 0x19, 0x8b, 0x1, 0x3a, 0x0, 0xc1, 0x1, 0x71, 0x23, 0xaa, 0x1, 0xc4, 0xf1, 0x4c, 0x0, 0x73, 0x3e, 0x3f, 0x1, 0x2e, 0x6, 0x9e, 0x1, 0x0, 0x21, 0xb5, 0x1, 0x31, 0x1d, 0x86, 0x1, 0x72, 0x38, 0x9f, 0x1, 0x79, 0xd4, 0x89, 0x0, 0x12, 0x17, 0x92, 0x1
	align   2

setup_data:
	bcf	CFGS
	bsf	EEPGD
	
	movlw	255
	movwf	data_length
	
	movlw	20;this needs to be 4 times K
	movwf	first_point_length
    
	return
    
load_data:
    	lfsr	0, data_loc	; Load FSR0 with address in RAM	
	movlw	low highword(data)	; address of data in PM
	movwf	TBLPTRU, A	; load upper bits to TBLPTRU
	movlw	high(data)	; address of data in PM
	movwf	TBLPTRH, A	; load high byte to TBLPTRH
	movlw	low(data)	; address of data in PM
	movwf	TBLPTRL, A	; load low byte to TBLPTRL
	movf	data_length, W		
	movwf 	counter, A	; our counter register
	
	bra	loop

loop:
        tblrd*+			; move one byte from PM to TABLAT, increment TBLPRT
	movff	TABLAT, POSTINC0	; move read data from TABLAT to (FSR0), increment FSR0	
	decfsz	counter, A	; count down to zero
	bra	loop		; keep going until finished
	
	return

load_first_points_data:
        lfsr	0, first_points_loc	; Load FSR0 with address in RAM	
	movlw	low highword(first_point_data)	; address of data in PM
	movwf	TBLPTRU, A	; load upper bits to TBLPTRU
	movlw	high(first_point_data)	; address of data in PM
	movwf	TBLPTRH, A	; load high byte to TBLPTRH
	movlw	low(first_point_data)	; address of data in PM
	movwf	TBLPTRL, A	; load low byte to TBLPTRL
	movf	first_point_length, W		
	movwf 	counter, A	; our counter register
	
	bra	loop
	
loop2:
        tblrd*+			; move one byte from PM to TABLAT, increment TBLPRT
	movff	TABLAT, POSTINC0	; move read data from TABLAT to (FSR0), increment FSR0	
	decfsz	counter, A	; count down to zero
	bra	loop2		; keep going until finished
	
	return